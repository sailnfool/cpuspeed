.TH onewrapper 1 "18 March 2022"
.SH NAME onewrapper \- execute multiple cryptographic hash performance tests
.SH SYNOPSIS
.B mcperf [ \-h ] [ \-c
.I <#>
] [ \-l 
.I <#>
] [ \-n ] [ \-s
.I <hashprogram>
] [ \-w
.I <#>
] [ \-d
.I <suffix>
]
.I <maxiterations>
[ 
.I <increment>
]

.SH DESCRIPTION
.B onewrapper
runs a set of performance tests from 1024 iterations up to a maximum
of
.I <maxiterations>.
The maxiterations is multiplied by 1024.  After testing each iteration
count, the iteration
.I <increment>
(default 10) is increased up to the maximum.
The testing is performed for each hashtype:
.BR b2sum
.BR sha1sum
.BR sha256sum
.BR sha512sum
.BR dd
.SS Options
.TP
.B \-h
Print the help message
.TP
.B \-c
.I <#>
an integer to reflect the number of copies of the dictionary file to
be concatenated together to reduce the number of times the hash
program is launched to process a quantity of data.
.TP
.B \-d
.I <suffix>
is the string just prior to the .csv extenions on files (see
.BR  FILES)
to uniquely identify the generated testing script.  The default is
normally the UCT date and time stamp.
.br
.BR E.G.,
20220318_1741
.TP
.B \-f
.I <testname>
default: hostname_yyyymmdd_HHMM is the name of the CSV file
see
.BR  FILES
for example file names where the results are tabulated.
.TP
.B \-l
.I <#>
is an integer which is an alternate low iteration count which is
multiplied by 1024.
.TP
.B \-n
Send the program (hash or dd) output to /dev/null
.TP
.B \-s
.I <hashprogram>
specify which cryptographic hash program to use. Valid values:
b2sum; sha1sum; sha256sum; sha512sum.
.br
or the special case "dd" which helps measure the file
operations (open, read, write) without the cryptographic processing.
.TP
.B \-w
.I <#>
the divisor used to provid a "wait" (sleep) time for copying the
dictionary to /tmp to complete.
When making (e.g. 512) copies of a dictionary
that is ~1MB in size, it takes time for that operation to complete
so that it does not interfere with timing the program under test.  On
a Raspberry PI 4 it appears that it takes a divisor value of
between 8 and 20 to allow the copy process to complete (flushing the 
write behind buffers to disk.  Your mileage may vary so perform your
own testing.
.SH FILES
/usr/share/dict/american-english
.br
/tmp/american-english_1
.br
/tmp/american-english_512
.br
<dir>/hostname.hashname.csv
.br

.BR E.G.,
~/github/sysperf/results/pi04-04-02.b2sum.csv
.br
will contain a descriptive header line and result values separated by
the "|" character.  One set of iteration results per row.
.br

.BR E.G.,
~/github/sysperf/results/DB_pi04-04-02.b2sum.csv
.br
will contain a descriptive header line and a subset of result values
separated by the "|" character.  Information about the machine under
test is elided from the data.
.br

.BR E.G.,
~/github/sysperf/results/pi04-04-02_description.txt
will contain a descriptive header line and a set of values which
describe the machine (in this example, 
.I pi04-04-02
) that describe the host.
.br
.BR  E.G.,
(note that the header line and date line shown below are
normally on a single line
but are broken up here for clarity of display)
.br

Hostname|Architecture|cores|CPU max MHz|MEM Total|
.br
MEM Used|MEM Free|SWAP Total|S WAP Used|SWAP Free|
.br
OS|OS_VERSION_ID|Bogomips
.br

pi04-04-02|aarch64|4|1500.0000|3.7Gi|
.br
1.6Gi|492Mi|3.3Gi|533Mi|2.8Gi|
.br
ubuntu|"21.10 "|108.00

.SH SEE ALSO
.BR dd (1),
.BR b2sum (1),
.BR sha1sum (1),
.BR sha256sum (1),
.BR sha512sum (1),
.BR mcperf (1),
.BR allwrapper (1)
.SH NOTES
Most often it is invoded by
.BR allwrapper (1).
.SH EXAMPLES
.SH AUTHOR
Robert E. Novak
.SH BUGS

